{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","react_default","a","createElement","className","onSubmit","preventDefault","id","Math","floor","random","text","Fragment","type","placeholder","name","onChange","ref","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","onClick","index_esm","ti_index_esm","TodoList","setTodos","test","newTodos","concat","toConsumableArray","components_Todo","updateTodos","removeArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0d11d804.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSumbit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSumbit}>\r\n            {props.edit ? (\r\n            <>\r\n            <input \r\n                type='text' \r\n                placeholder='Update your item' \r\n                value={input} \r\n                name='text' \r\n                className='todo-input'\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n            />\r\n            <button className='todo-button'>Update</button>\r\n            </>\r\n            ) : \r\n            (\r\n            <>\r\n            <input \r\n                type='text' \r\n                placeholder='Create Todo' \r\n                value={input} \r\n                name='text' \r\n                className='todo-input'\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n            />\r\n            <button className='todo-button'>Add todo</button>\r\n            </>\r\n            )\r\n            }\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n  \r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({\r\n        id: null,\r\n        value: ''\r\n    })\r\n  }\r\n\r\n  if(edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n  \r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n    key={index}\r\n    \r\n    >\r\n    <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n    </div>\r\n    <div className='icons'>\r\n        <RiCloseCircleLine \r\n        onClick={() => removeTodo(todo.id)}\r\n        className='delete-icon'\r\n        />\r\n        <TiEdit \r\n        onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n        className='edit-icon'\r\n        />\r\n    </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        \r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updateTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updateTodos);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h1>Apa rencaya hari ini ?</h1>\r\n        <TodoForm onSubmit={addTodo} />\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}